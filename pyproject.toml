[tool.poetry]
name = "framegallery"
version = "0.1.0"
description = "A web application for managing own photos on a Samsung Frame"
authors = ["Sebastiaan Knijnenburg <sebastiaan.knijnenburg@gmail.com>"]
license = "GPL"
readme = "README.md"
packages = [{include = "framegallery"}]

[tool.poetry.dependencies]
python = "^3.11"
samsungtvws = {git = "https://github.com/slknijnenburg/samsung-tv-ws-api.git", branch = "master"}
fastapi = "^0.115.0"
uvicorn = "^0.34.0"
pydantic = "^2.9.2"
aiohttp = "^3.10.8"
websockets = "^15.0.0"
jinja2 = "^3.1.4"
sqlalchemy = "^2.0.35"
wakeonlan = "^3.1.0"
alembic = "^1.13.3"
pydantic-settings = "^2.6.0"
pillow = "^11.0.0"
pillow-heif = "^0.22.0"
blinker = "^1.8.2"
icmplib = "^3.0.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pyright = "^1.1.394"
ruff = "^0.9.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version="py311"
# Allow lines to be as long as 120.
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # Redundant if using Ruff formatter which we are.
    "D104",   # Missing docstring in public package
    "D106",   # Missing docstring in public method
    "D107",   # Missing docstring in __init__
    "D100",   # Missing docstring in public module
    "D205",   # 1 blank line required between summary line and description
    "D203",   # Incompatible together with D211
    "D212",   # Incompatible together with D213
    "EM101",  # I can read traces just fine
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.pyright]
venvPath = "."
venv = ".venv"